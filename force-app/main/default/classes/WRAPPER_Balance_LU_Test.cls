//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class WRAPPER_Balance_LU_Test {
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"accountsList\": {'+
		'    \"_links\": null,'+
		'    \"accountsDataList\": ['+
		'      {'+
		'        \"_links\": null,'+
		'        \"account\": null,'+
		'        \"accountIdList\": ['+
		'          {'+
		'            \"accountId\": \"ES4800490000000000000000\",'+
		'            \"idType\": \"IBA\"'+
		'          }'+
		'        ],'+
		'        \"alias\": null,'+
		'        \"availableBalance\": {'+
		'          \"amount\": 1000003.0,'+
		'          \"currencyCode\": \"EUR\",'+
		'          \"lastUpdate\": \"2020-04-02T10:01:56.392Z\"'+
		'        },'+
		'        \"balanceAllowed\": null,'+
		'        \"bankDescription\": \"0001\",'+
		'        \"bankId\": \"BSCHESM0XXX\",'+
		'        \"country\": \"ES\",'+
		'        \"customerId\": null,'+
		'        \"customerName\": null,'+
		'        \"description\": null,'+
		'        \"displayNumber\": \"ES******00\",'+
		'        \"flags\": {'+
		'          \"pain002Active\": true,'+
		'          \"hasSwiftPayments\": true'+
		'        },'+
		'        \"hasSwiftPayment\": \"YES\",'+
		'        \"hasSwiftPayments\": null,'+
		'        \"internationalPaymentsAllowed\": null,'+
		'        \"lastTransactionDate\": \"2020-03-03T00:00:00Z\",'+
		'        \"lastUpdateSwiftPayment\": \"2020-03-03T00:00:00Z\",'+
		'        \"mainBalance\": {'+
		'          \"amount\": 1000000.0,'+
		'          \"currencyCode\": \"EUR\",'+
		'          \"lastUpdate\": \"2020-04-02T10:01:56.392Z\"'+
		'        },'+
		'        \"overdraftLimit\": null,'+
		'        \"overdraftUsed\": null,'+
		'        \"pain002Active\": true,'+
		'        \"parentCustomerName\": null,'+
		'        \"pendingBalance\": null,'+
		'        \"status\": null,'+
		'        \"transactionsAllowed\": null,'+
		'        \"type\": \"IBA\",'+
		'        \"withholdingBalance\": null'+
		'      },'+
		'      {'+
		'        \"_links\": null,'+
		'        \"account\": null,'+
		'        \"accountIdList\": ['+
		'          {'+
		'            \"accountId\": \"ES9000490000000000000011\",'+
		'            \"idType\": \"IBA\"'+
		'          }'+
		'        ],'+
		'        \"alias\": null,'+
		'        \"availableBalance\": {'+
		'          \"amount\": 1000003.0,'+
		'          \"currencyCode\": \"EUR\",'+
		'          \"lastUpdate\": \"2020-04-02T10:01:56.392Z\"'+
		'        },'+
		'        \"balanceAllowed\": null,'+
		'        \"bankDescription\": \"0001\",'+
		'        \"bankId\": \"BSCHESM0XXX\",'+
		'        \"country\": \"ES\",'+
		'        \"customerId\": null,'+
		'        \"customerName\": null,'+
		'        \"description\": null,'+
		'        \"displayNumber\": \"ES******11\",'+
		'        \"flags\": {'+
		'          \"pain002Active\": true,'+
		'          \"hasSwiftPayments\": true'+
		'        },'+
		'        \"hasSwiftPayment\": \"YES\",'+
		'        \"hasSwiftPayments\": null,'+
		'        \"internationalPaymentsAllowed\": null,'+
		'        \"lastTransactionDate\": \"2020-03-03T00:00:00Z\",'+
		'        \"lastUpdateSwiftPayment\": \"2020-03-03T00:00:00Z\",'+
		'        \"mainBalance\": {'+
		'          \"amount\": 1000000.0,'+
		'          \"currencyCode\": \"EUR\",'+
		'          \"lastUpdate\": \"2020-04-02T10:01:56.392Z\"'+
		'        },'+
		'        \"overdraftLimit\": null,'+
		'        \"overdraftUsed\": null,'+
		'        \"pain002Active\": true,'+
		'        \"parentCustomerName\": null,'+
		'        \"pendingBalance\": null,'+
		'        \"status\": null,'+
		'        \"transactionsAllowed\": null,'+
		'        \"type\": \"IBA\",'+
		'        \"withholdingBalance\": null'+
		'      },'+
		'      {'+
		'        \"_links\": null,'+
		'        \"account\": null,'+
		'        \"accountIdList\": ['+
		'          {'+
		'            \"accountId\": \"ES8100490075473000562155\",'+
		'            \"idType\": \"IBA\"'+
		'          }'+
		'        ],'+
		'        \"alias\": null,'+
		'        \"availableBalance\": {'+
		'          \"amount\": 1000003.0,'+
		'          \"currencyCode\": \"EUR\",'+
		'          \"lastUpdate\": \"2020-04-02T10:01:56.392Z\"'+
		'        },'+
		'        \"balanceAllowed\": null,'+
		'        \"bankDescription\": \"0001\",'+
		'        \"bankId\": \"BSCHESM0XXX\",'+
		'        \"country\": \"ES\",'+
		'        \"customerId\": null,'+
		'        \"customerName\": null,'+
		'        \"description\": null,'+
		'        \"displayNumber\": \"ES******55\",'+
		'        \"flags\": {'+
		'          \"pain002Active\": true,'+
		'          \"hasSwiftPayments\": true'+
		'        },'+
		'        \"hasSwiftPayment\": \"YES\",'+
		'        \"hasSwiftPayments\": null,'+
		'        \"internationalPaymentsAllowed\": null,'+
		'        \"lastTransactionDate\": \"2020-03-03T00:00:00Z\",'+
		'        \"lastUpdateSwiftPayment\": \"2019-10-04T11:38:00Z\",'+
		'        \"mainBalance\": {'+
		'          \"amount\": 1000000.0,'+
		'          \"currencyCode\": \"EUR\",'+
		'          \"lastUpdate\": \"2020-04-02T10:01:56.392Z\"'+
		'        },'+
		'        \"overdraftLimit\": null,'+
		'        \"overdraftUsed\": null,'+
		'        \"pain002Active\": true,'+
		'        \"parentCustomerName\": null,'+
		'        \"pendingBalance\": null,'+
		'        \"status\": null,'+
		'        \"transactionsAllowed\": null,'+
		'        \"type\": \"IBA\",'+
		'        \"withholdingBalance\": null'+
		'      },'+
		'      {'+
		'        \"_links\": null,'+
		'        \"account\": null,'+
		'        \"accountIdList\": ['+
		'          {'+
		'            \"accountId\": \"ES1000490072012110458432\",'+
		'            \"idType\": \"IBA\"'+
		'          }'+
		'        ],'+
		'        \"alias\": null,'+
		'        \"availableBalance\": {'+
		'          \"amount\": 1000003.0,'+
		'          \"currencyCode\": \"EUR\",'+
		'          \"lastUpdate\": \"2020-04-02T10:01:56.392Z\"'+
		'        },'+
		'        \"balanceAllowed\": null,'+
		'        \"bankDescription\": \"0001\",'+
		'        \"bankId\": \"BSCHESM0XXX\",'+
		'        \"country\": \"ES\",'+
		'        \"customerId\": null,'+
		'        \"customerName\": null,'+
		'        \"description\": null,'+
		'        \"displayNumber\": \"ES******32\",'+
		'        \"flags\": {'+
		'          \"pain002Active\": true,'+
		'          \"hasSwiftPayments\": true'+
		'        },'+
		'        \"hasSwiftPayment\": \"YES\",'+
		'        \"hasSwiftPayments\": null,'+
		'        \"internationalPaymentsAllowed\": null,'+
		'        \"lastTransactionDate\": \"2020-03-03T00:00:00Z\",'+
		'        \"lastUpdateSwiftPayment\": \"2020-04-01T10:57:00Z\",'+
		'        \"mainBalance\": {'+
		'          \"amount\": 1000000.0,'+
		'          \"currencyCode\": \"EUR\",'+
		'          \"lastUpdate\": \"2020-04-02T10:01:56.392Z\"'+
		'        },'+
		'        \"overdraftLimit\": null,'+
		'        \"overdraftUsed\": null,'+
		'        \"pain002Active\": true,'+
		'        \"parentCustomerName\": null,'+
		'        \"pendingBalance\": null,'+
		'        \"status\": null,'+
		'        \"transactionsAllowed\": null,'+
		'        \"type\": \"IBA\",'+
		'        \"withholdingBalance\": null'+
		'      }'+
		'    ]'+
		'  },'+
            +
		'  \"listaDivisa\": [],'+
		'  \"descripcionConversion\": \"USD=1,07659 31-12-2017; GBP=1,07659 31-12-2017; ARS=10,267 05-01-2015; MXN=17,857 05-01-2015; CLP=737,8 05-01-2015; PYG=0,00017 ; BRL=3,2571 05-01-2015\",'+
		'  \"listaTipCambio\": ['+
		'    {'+
		'      \"tipoDeCambio\": {'+
		'        \"claError\": null,'+
		'        \"divisa\": \"EUR\",'+
		'        \"fecha\": null,'+
		'        \"importe\": 1,'+
		'        \"importeDecimal\": 1.00000000,'+
		'        \"nombreDivisa\": null,'+
		'        \"tipError\": null'+
		'      }'+
		'    },'+
		'    {'+
		'      \"tipoDeCambio\": {'+
		'        \"claError\": null,'+
		'        \"divisa\": \"USD\",'+
		'        \"fecha\": \"2017-12-30T23:00:00.000Z\",'+
		'        \"importe\": 1,'+
		'        \"importeDecimal\": 1.07659464,'+
		'        \"nombreDivisa\": null,'+
		'        \"tipError\": \"2\"'+
		'      }'+
		'    },'+
		'    {'+
		'      \"tipoDeCambio\": {'+
		'        \"claError\": null,'+
		'        \"divisa\": \"GBP\",'+
		'        \"fecha\": \"2017-12-30T23:00:00.000Z\",'+
		'        \"importe\": 1,'+
		'        \"importeDecimal\": 1.07659464,'+
		'        \"nombreDivisa\": null,'+
		'        \"tipError\": \"2\"'+
		'      }'+
		'    },'+
		'    {'+
		'      \"tipoDeCambio\": {'+
		'        \"claError\": null,'+
		'        \"divisa\": \"ARS\",'+
		'        \"fecha\": \"2015-01-04T23:00:00.000Z\",'+
		'        \"importe\": 10,'+
		'        \"importeDecimal\": 10.26700000,'+
		'        \"nombreDivisa\": null,'+
		'        \"tipError\": \"2\"'+
		'      }'+
		'    },'+
		'    {'+
		'      \"tipoDeCambio\": {'+
		'        \"claError\": null,'+
		'        \"divisa\": \"MXN\",'+
		'        \"fecha\": \"2015-01-04T23:00:00.000Z\",'+
		'        \"importe\": 17,'+
		'        \"importeDecimal\": 17.85700000,'+
		'        \"nombreDivisa\": null,'+
		'        \"tipError\": \"2\"'+
		'      }'+
		'    },'+
		'    {'+
		'      \"tipoDeCambio\": {'+
		'        \"claError\": null,'+
		'        \"divisa\": \"CLP\",'+
		'        \"fecha\": \"2015-01-04T23:00:00.000Z\",'+
		'        \"importe\": 737,'+
		'        \"importeDecimal\": 737.80000000,'+
		'        \"nombreDivisa\": null,'+
		'        \"tipError\": \"2\"'+
		'      }'+
		'    },'+
		'    {'+
		'      \"tipoDeCambio\": {'+
		'        \"claError\": null,'+
		'        \"divisa\": \"PYG\",'+
		'        \"fecha\": null,'+
		'        \"importe\": 5924,'+
		'        \"importeDecimal\": 0.00016878,'+
		'        \"nombreDivisa\": null,'+
		'        \"tipError\": \"0\"'+
		'      }'+
		'    },'+
		'    {'+
		'      \"tipoDeCambio\": {'+
		'        \"claError\": \"AUD\",'+
		'        \"divisa\": \"BRL\",'+
		'        \"fecha\": \"2015-01-04T23:00:00.000Z\",'+
		'        \"importe\": 3,'+
		'        \"importeDecimal\": 3.25710000,'+
		'        \"nombreDivisa\": null,'+
		'        \"tipError\": \"2\"'+
		'      }'+
		'    },'+
		'    {'+
		'      \"tipoDeCambio\": {'+
		'        \"claError\": \"test\",'+
		'        \"divisa\": \"AUD\",'+
		'        \"fecha\": \"2018-09-12T22:00:00.000Z\",'+
		'        \"importe\": 0,'+
		'        \"importeDecimal\": 0.77820000,'+
		'        \"nombreDivisa\": null,'+
		'        \"tipError\": \"2\"'+
		'      }'+
		'    }'+
		'  ]'+
		'}';
		WRAPPER_Balance_LU r = WRAPPER_Balance_LU.parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU.AccountsDataList objAccountsDataList = new WRAPPER_Balance_LU.AccountsDataList(System.JSON.createParser(json));
		System.assert(objAccountsDataList != null);
		System.assert(objAccountsDataList.x_links == null);
		System.assert(objAccountsDataList.account == null);
		System.assert(objAccountsDataList.accountIdList == null);
		System.assert(objAccountsDataList.alias == null);
		System.assert(objAccountsDataList.availableBalance == null);
		System.assert(objAccountsDataList.balanceAllowed == null);
		System.assert(objAccountsDataList.bankDescription == null);
		System.assert(objAccountsDataList.bankId == null);
		System.assert(objAccountsDataList.country == null);
		System.assert(objAccountsDataList.customerId == null);
		System.assert(objAccountsDataList.customerName == null);
		System.assert(objAccountsDataList.description == null);
		System.assert(objAccountsDataList.displayNumber == null);
		System.assert(objAccountsDataList.flags == null);
		System.assert(objAccountsDataList.hasSwiftPayment == null);
		System.assert(objAccountsDataList.hasSwiftPayments == null);
		System.assert(objAccountsDataList.internationalPaymentsAllowed == null);
		System.assert(objAccountsDataList.lastTransactionDate == null);
		System.assert(objAccountsDataList.lastUpdateSwiftPayment == null);
		System.assert(objAccountsDataList.mainBalance == null);
		System.assert(objAccountsDataList.overdraftLimit == null);
		System.assert(objAccountsDataList.overdraftUsed == null);
		System.assert(objAccountsDataList.pain002Active == null);
		System.assert(objAccountsDataList.parentCustomerName == null);
		System.assert(objAccountsDataList.pendingBalance == null);
		System.assert(objAccountsDataList.status == null);
		System.assert(objAccountsDataList.transactionsAllowed == null);
		System.assert(objAccountsDataList.type_Z == null);
		System.assert(objAccountsDataList.withholdingBalance == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU.AvailableBalance objAvailableBalance = new WRAPPER_Balance_LU.AvailableBalance(System.JSON.createParser(json));
		System.assert(objAvailableBalance != null);
		System.assert(objAvailableBalance.amount == null);
		System.assert(objAvailableBalance.currencyCode == null);
		System.assert(objAvailableBalance.lastUpdate == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU.AccountIdList objAccountIdList = new WRAPPER_Balance_LU.AccountIdList(System.JSON.createParser(json));
		System.assert(objAccountIdList != null);
		System.assert(objAccountIdList.accountId == null);
		System.assert(objAccountIdList.idType == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU.AccountsList objAccountsList = new WRAPPER_Balance_LU.AccountsList(System.JSON.createParser(json));
		System.assert(objAccountsList != null);
		System.assert(objAccountsList.x_links == null);
		System.assert(objAccountsList.accountsDataList == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU objWRAPPER_Balance_LU = new WRAPPER_Balance_LU(System.JSON.createParser(json));
		System.assert(objWRAPPER_Balance_LU != null);
		System.assert(objWRAPPER_Balance_LU.accountsList == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU.Flags objFlags = new WRAPPER_Balance_LU.Flags(System.JSON.createParser(json));
		System.assert(objFlags != null);
		System.assert(objFlags.pain002Active == null);
		System.assert(objFlags.hasSwiftPayments == null);
	}
}