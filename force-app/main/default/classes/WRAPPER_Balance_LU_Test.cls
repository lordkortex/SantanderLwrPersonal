//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
/*----------------------------------------------------------------------------------
Author:         Andrea Martin
Company:        Deloitte
Description:    Test class of Wrapper_B2B_Data
History
<Date>			<Author>		<Description>
04/02/2021		Andrea Martin    	Modify json
----------------------------------------------------------------------------------*/
@IsTest
public class WRAPPER_Balance_LU_Test {
	

	static testMethod void testParse() {
        String json = '{"accountsList":{"_links":null,"accountsDataList":[{"_links":null,"account":null,"accountIdList":[{"accountId":"ES4800490000000000000000","idType":"IBA"}],"companyIdsList":[{"id":"id_test","idType":"IBA"}],"alias":"alias_TEST","aliasGts":"aliasGts_TEST","availableBalance":{"amount":1000003.0,"currencyCode":"EUR","lastUpdate":"2020-04-02T10:01:56.392Z"},"accountHolderAddress":{"streetName":"streetName_TEST","country":"ES","townName":"townName_TEST"},"balanceAllowed":true,"bankDescription":"0001","bankId":"BSCHESM0XXX","country":"ES","codEmisora":"codEmisora_TEST","accountNexusId":"accountNexusId_TEST","customerName":"customerName_TEST","description":"description_TEST","displayNumber":"ES******00","flags":{"pain002Active":true,"hasSwiftPayments":true},"hasSwiftPayment":"YES","hasSwiftPayments":"YES","internationalPaymentsAllowed":true,"lastTransactionDate":"2020-03-03T00:00:00Z","lastUpdateSwiftPayment":"2020-03-03T00:00:00Z","mainBalance":{"amount":1000000.0,"currencyCode":"EUR","lastUpdate":"2020-04-02T10:01:56.392Z"},"overdraftLimit":null,"overdraftUsed":null,"pain002Active":true,"parentCustomerName":"parentCustomerName_test","pendingBalance":null,"status":"status_test","customerId":"customerId_test","transactionsAllowed":true,"type":"IBA","withholdingBalance":null,"aliasCuentaPerfilado":"aliasCuentaPerfilado_Test","aliasEntidad":"aliasEntidad_Test","dataProvider":"dataProvider_Test","associatedAccountList":[{"accountAddress":"accountAddress_TEST","accountName":"accountName_test","account":{"accountIdType":"accountIdType_Test","accountId":"accountId_Test"},"bankIdType":"bankIdType_Test","bankId":"bankId_Test"}]}]},"descripcionConversion":"USD=1,0765931-12-2017GBP=1,0765931-12-2017ARS=10,26705-01-2015MXN=17,85705-01-2015CLP=737,805-01-2015PYG=0,00017BRL=3,257105-01-2015","listaTipCambio":[{"tipoDeCambio":{"claError":"test","divisa":"AUD","fecha":"2018-09-12T22:00:00.000Z","importe":0,"importeDecimal":0.77820000,"nombreDivisa":"nombreDivisa","tipError":"2"}}]}';
        
		WRAPPER_Balance_LU r = WRAPPER_Balance_LU.parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU.AccountsDataList objAccountsDataList = new WRAPPER_Balance_LU.AccountsDataList(System.JSON.createParser(json));
		System.assert(objAccountsDataList != null);
		System.assert(objAccountsDataList.x_links == null);
		System.assert(objAccountsDataList.account == null);
		System.assert(objAccountsDataList.accountIdList == null);
		System.assert(objAccountsDataList.alias == null);
		System.assert(objAccountsDataList.availableBalance == null);
		System.assert(objAccountsDataList.balanceAllowed == null);
		System.assert(objAccountsDataList.bankDescription == null);
		System.assert(objAccountsDataList.bankId == null);
		System.assert(objAccountsDataList.country == null);
		System.assert(objAccountsDataList.customerId == null);
		System.assert(objAccountsDataList.customerName == null);
		System.assert(objAccountsDataList.description == null);
		System.assert(objAccountsDataList.displayNumber == null);
		System.assert(objAccountsDataList.flags == null);
		System.assert(objAccountsDataList.hasSwiftPayment == null);
		System.assert(objAccountsDataList.hasSwiftPayments == null);
		System.assert(objAccountsDataList.internationalPaymentsAllowed == null);
		System.assert(objAccountsDataList.lastTransactionDate == null);
		System.assert(objAccountsDataList.lastUpdateSwiftPayment == null);
		System.assert(objAccountsDataList.mainBalance == null);
		System.assert(objAccountsDataList.overdraftLimit == null);
		System.assert(objAccountsDataList.overdraftUsed == null);
		System.assert(objAccountsDataList.pain002Active == null);
		System.assert(objAccountsDataList.parentCustomerName == null);
		System.assert(objAccountsDataList.pendingBalance == null);
		System.assert(objAccountsDataList.status == null);
		System.assert(objAccountsDataList.transactionsAllowed == null);
		System.assert(objAccountsDataList.type_Z == null);
		System.assert(objAccountsDataList.withholdingBalance == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU.AvailableBalance objAvailableBalance = new WRAPPER_Balance_LU.AvailableBalance(System.JSON.createParser(json));
		System.assert(objAvailableBalance != null);
		System.assert(objAvailableBalance.amount == null);
		System.assert(objAvailableBalance.currencyCode == null);
		System.assert(objAvailableBalance.lastUpdate == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU.AccountIdList objAccountIdList = new WRAPPER_Balance_LU.AccountIdList(System.JSON.createParser(json));
		System.assert(objAccountIdList != null);
		System.assert(objAccountIdList.accountId == null);
		System.assert(objAccountIdList.idType == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU.AccountsList objAccountsList = new WRAPPER_Balance_LU.AccountsList(System.JSON.createParser(json));
		System.assert(objAccountsList != null);
		System.assert(objAccountsList.x_links == null);
		System.assert(objAccountsList.accountsDataList == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU objWRAPPER_Balance_LU = new WRAPPER_Balance_LU(System.JSON.createParser(json));
		System.assert(objWRAPPER_Balance_LU != null);
		System.assert(objWRAPPER_Balance_LU.accountsList == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WRAPPER_Balance_LU.Flags objFlags = new WRAPPER_Balance_LU.Flags(System.JSON.createParser(json));
		System.assert(objFlags != null);
		System.assert(objFlags.pain002Active == null);
		System.assert(objFlags.hasSwiftPayments == null);
	}
}